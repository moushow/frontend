{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      currentTime: '',\n      // 添加currentTime数据属性\n      currentDate: new Date().toISOString().slice(0, 10),\n      dailySchedule: []\n    };\n  },\n  mounted() {\n    var option = {\n      title: {\n        text: '日程信息统计'\n      },\n      xAxis: {\n        type: 'category',\n        data: []\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: [],\n        type: 'line'\n      }, {\n        data: [],\n        type: 'bar'\n      }]\n    };\n    var chartDom = document.getElementById('main');\n    var myChart = echarts.init(chartDom);\n    const username = this.user.username;\n    this.request.get(\"/echarts/example/\" + username).then(res => {\n      console.log(res);\n      option.xAxis.data = res.data.x;\n      option.series[0].data = res.data.y;\n      option.series[1].data = res.data.y;\n      myChart.setOption(option);\n    });\n\n    // 添加更新时间的定时器\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n\n    // 获取今日日程数据\n    this.request.get(`/schedule/${this.username}`).then(res => {\n      this.dailySchedule = res.data.map(item => item.event); // 假设后端返回包含 event 属性的对象数组\n    }).catch(err => {\n      console.error(err);\n    });\n  },\n  methods: {\n    updateTime() {\n      const currentDate = new Date();\n      this.currentTime = currentDate.toLocaleString(); // 更新currentTime\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","localStorage","getItem","JSON","parse","currentTime","currentDate","Date","toISOString","slice","dailySchedule","mounted","option","title","text","xAxis","type","yAxis","series","chartDom","document","getElementById","myChart","init","username","request","get","then","res","console","log","x","y","setOption","updateTime","setInterval","map","item","event","catch","err","error","methods","toLocaleString"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 其他内容 -->\r\n\r\n    <div class=\"time-display\">{{ currentTime }}</div>\r\n\r\n    <div id=\"main\" style=\"width: 1000px; height: 400px\"></div>\r\n     <!-- 添加今日日程部分 -->\r\n     <div class=\"daily-schedule\">\r\n      <h2>今日日程</h2>\r\n      <!-- 今日日程内容将在这里添加 -->\r\n      <ul>\r\n        <li v-for=\"transaction in dailySchedule\" :key=\"transaction\">\r\n          {{ transaction }}\r\n        </li>\r\n      </ul>\r\n\r\n   \r\n\r\n   \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  name: \"Home\",\r\n  data() {\r\n    return {\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      currentTime: '',// 添加currentTime数据属性\r\n      currentDate: new Date().toISOString().slice(0, 10),\r\n      dailySchedule: [],\r\n     \r\n    }\r\n  },\r\n  mounted() {\r\n    var option = {\r\n      title: {\r\n        text: '日程信息统计'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: []\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          data: [],\r\n          type: 'line'\r\n        },\r\n        {\r\n          data: [],\r\n          type: 'bar'\r\n        }\r\n      ]\r\n    };\r\n    var chartDom = document.getElementById('main');\r\n    var myChart = echarts.init(chartDom);\r\n    const username = this.user.username\r\n    this.request.get(\"/echarts/example/\" + username).then(res => {\r\n      console.log(res)\r\n      option.xAxis.data = res.data.x;\r\n      option.series[0].data = res.data.y;\r\n      option.series[1].data = res.data.y;\r\n      myChart.setOption(option);\r\n    })\r\n\r\n    // 添加更新时间的定时器\r\n    this.updateTime();\r\n    setInterval(this.updateTime, 1000);\r\n\r\n    // 获取今日日程数据\r\n  this.request.get(`/schedule/${this.username}`)\r\n    .then(res => {\r\n      this.dailySchedule = res.data.map(item => item.event); // 假设后端返回包含 event 属性的对象数组\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n  },\r\n  methods: {\r\n    updateTime() {\r\n      const currentDate = new Date();\r\n      this.currentTime = currentDate.toLocaleString(); // 更新currentTime\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.time-display {\r\n  font-family: 'Courier New', Courier, monospace;\r\n  font-size: 36px;\r\n  color: #ff3700;\r\n  background-color: #edebeb;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.daily-schedule {\r\n  background-color: #f5f5f5;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.daily-schedule h2 {\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin-top: 0;\r\n}\r\n</style>"],"mappings":"AAyBA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,WAAA;MAAA;MACAC,WAAA,MAAAC,IAAA,GAAAC,WAAA,GAAAC,KAAA;MACAC,aAAA;IAEA;EACA;EACAC,QAAA;IACA,IAAAC,MAAA;MACAC,KAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAC,IAAA;QACAjB,IAAA;MACA;MACAkB,KAAA;QACAD,IAAA;MACA;MACAE,MAAA,GACA;QACAnB,IAAA;QACAiB,IAAA;MACA,GACA;QACAjB,IAAA;QACAiB,IAAA;MACA;IAEA;IACA,IAAAG,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,IAAAC,OAAA,GAAAzB,OAAA,CAAA0B,IAAA,CAAAJ,QAAA;IACA,MAAAK,QAAA,QAAAxB,IAAA,CAAAwB,QAAA;IACA,KAAAC,OAAA,CAAAC,GAAA,uBAAAF,QAAA,EAAAG,IAAA,CAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACAhB,MAAA,CAAAG,KAAA,CAAAhB,IAAA,GAAA6B,GAAA,CAAA7B,IAAA,CAAAgC,CAAA;MACAnB,MAAA,CAAAM,MAAA,IAAAnB,IAAA,GAAA6B,GAAA,CAAA7B,IAAA,CAAAiC,CAAA;MACApB,MAAA,CAAAM,MAAA,IAAAnB,IAAA,GAAA6B,GAAA,CAAA7B,IAAA,CAAAiC,CAAA;MACAV,OAAA,CAAAW,SAAA,CAAArB,MAAA;IACA;;IAEA;IACA,KAAAsB,UAAA;IACAC,WAAA,MAAAD,UAAA;;IAEA;IACA,KAAAT,OAAA,CAAAC,GAAA,mBAAAF,QAAA,IACAG,IAAA,CAAAC,GAAA;MACA,KAAAlB,aAAA,GAAAkB,GAAA,CAAA7B,IAAA,CAAAqC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,KAAA;IACA,GACAC,KAAA,CAAAC,GAAA;MACAX,OAAA,CAAAY,KAAA,CAAAD,GAAA;IACA;EACA;EACAE,OAAA;IACAR,WAAA;MACA,MAAA5B,WAAA,OAAAC,IAAA;MACA,KAAAF,WAAA,GAAAC,WAAA,CAAAqC,cAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}