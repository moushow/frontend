{"ast":null,"code":"export default {\n  name: \"Password\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      rules: {\n        password: [{\n          required: true,\n          massage: 'please',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: false,\n          massage: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: false,\n          massage: '请确认密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.form.username = this.user.username;\n  },\n  methods: {\n    save() {\n      this.$refs.pass.validate(valid => {\n        if (valid) {\n          if (this.form.newPassword !== this.form.confirmPassword) {\n            this.$message.error(\"两次输入的新密码不相同\");\n            return false;\n          }\n          this.request.post(\"/user/password\", this.form).then(res => {\n            if (res.code === '200') {\n              this.$message.success(\"修改成功\");\n              this.$store.commit(\"logout\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","rules","password","required","massage","trigger","min","message","newPassword","confirmPassword","created","username","methods","save","$refs","pass","validate","valid","$message","error","request","post","then","res","code","success","$store","commit","msg"],"sources":["src/views/Password.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px\">\r\n    <el-form label-width=\"120px\" size=\"small\" :model=\"form\" :rules=\"rules\" ref=\"pass\">\r\n      <el-form-item label=\"原密码\" prop=\"password\">\r\n        <el-input v-model=\"form.password\" autocomplete=\"off\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n        <el-input v-model=\"form.newPassword\" autocomplete=\"off\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\r\n        <el-input v-model=\"form.confirmPassword\" autocomplete=\"off\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Password\",\r\n  data(){\r\n    return{\r\n      form: {},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      rules: {\r\n        password: [\r\n          { required: true, massage: 'please', trigger: 'blur' },\r\n          { min: 1, message: '请输入密码', trigger: 'blur'}\r\n        ],\r\n        newPassword: [\r\n          { required: false, massage: '请输入新密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { required: false, massage: '请确认密码', trigger: 'blur' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    this.form.username = this.user.username\r\n  },\r\n  methods: {\r\n    save(){\r\n      this.$refs.pass.validate((valid) => {\r\n        if(valid){\r\n          if(this.form.newPassword !== this.form.confirmPassword){\r\n            this.$message.error(\"两次输入的新密码不相同\")\r\n            return false\r\n          }\r\n          this.request.post(\"/user/password\", this.form).then(res => {\r\n            if(res.code === '200'){\r\n              this.$message.success(\"修改成功\")\r\n              this.$store.commit(\"logout\")\r\n            }else{\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAoBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,OAAA;UAAAF,OAAA;QAAA,EACA;QACAG,WAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAI,eAAA,GACA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,QAAA;IACA,KAAAf,IAAA,CAAAgB,QAAA,QAAAf,IAAA,CAAAe,QAAA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAAtB,IAAA,CAAAa,WAAA,UAAAb,IAAA,CAAAc,eAAA;YACA,KAAAS,QAAA,CAAAC,KAAA;YACA;UACA;UACA,KAAAC,OAAA,CAAAC,IAAA,wBAAA1B,IAAA,EAAA2B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAN,QAAA,CAAAO,OAAA;cACA,KAAAC,MAAA,CAAAC,MAAA;YACA;cACA,KAAAT,QAAA,CAAAC,KAAA,CAAAI,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}