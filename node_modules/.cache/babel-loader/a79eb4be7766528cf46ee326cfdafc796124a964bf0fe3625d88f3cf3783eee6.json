{"ast":null,"code":"export default {\n  name: \"Calendar\",\n  data() {\n    return {\n      value: new Date(),\n      arr: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    handleClick(date) {\n      const event = this.getEventForDate(date);\n      if (event) {\n        this.showMessage(event.event);\n      } else {\n        this.showMessage('暂无事务');\n      }\n    },\n    load() {\n      fetch(\"http://localhost:9090/schedule\").then(res => res.json()).then(res => {\n        if (res && Array.isArray(res)) {\n          this.arr = res.map(item => ({\n            date: item.date,\n            event: item.event\n          }));\n        }\n      }).catch(error => {\n        console.error(\"Error fetching schedule data:\", error);\n      });\n    },\n    getEventForDate(date) {\n      return this.arr.find(v => v.date === date);\n    },\n    getNextDay(date) {\n      const nextDay = new Date(date);\n      nextDay.setDate(nextDay.getDate() + 1);\n      return nextDay.toISOString().split('T')[0];\n    },\n    showMessage(message) {\n      this.$message({\n        message: message,\n        type: 'info',\n        customClass: 'custom-message'\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","value","Date","arr","created","load","methods","handleClick","date","event","getEventForDate","showMessage","fetch","then","res","json","Array","isArray","map","item","catch","error","console","find","v","getNextDay","nextDay","setDate","getDate","toISOString","split","message","$message","type","customClass"],"sources":["src/views/Calendar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-calendar>\r\n      <template slot=\"dateCell\" slot-scope=\"{ date, data }\">\r\n        <div\r\n            style=\"height: 100%; position: relative;\"\r\n            :class=\"['custom-date-cell', data.isSelected ? 'is-selected' : '']\"\r\n            @click=\"handleClick(data.day)\"\r\n        >\r\n          <div class=\"date\">{{ getNextDay(data.day).split('-').slice(1).join('-') }}</div>\r\n          <div class=\"content\" v-if=\"getEventForDate(data.day)\">\r\n            {{ getEventForDate(data.day).event }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </el-calendar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Calendar\",\r\n  data() {\r\n    return {\r\n      value: new Date(),\r\n      arr: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.load();\r\n  },\r\n  methods: {\r\n    handleClick(date) {\r\n      const event = this.getEventForDate(date);\r\n      if (event) {\r\n        this.showMessage(event.event);\r\n      } else {\r\n        this.showMessage('暂无事务');\r\n      }\r\n    },\r\n    load() {\r\n      fetch(\"http://localhost:9090/schedule\")\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            if (res && Array.isArray(res)) {\r\n              this.arr = res.map((item) => ({\r\n                date: item.date,\r\n                event: item.event,\r\n              }));\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching schedule data:\", error);\r\n          });\r\n    },\r\n    getEventForDate(date) {\r\n      return this.arr.find((v) => v.date === date);\r\n    },\r\n    getNextDay(date) {\r\n      const nextDay = new Date(date);\r\n      nextDay.setDate(nextDay.getDate() + 1);\r\n      return nextDay.toISOString().split('T')[0];\r\n    },\r\n    showMessage(message) {\r\n      this.$message({\r\n        message: message,\r\n        type: 'info',\r\n        customClass: 'custom-message',\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.custom-date-cell {\r\n  border: 4px solid transparent; /* 加粗边框 */\r\n  transition: border-color 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: 120px;\r\n  padding: 10px;\r\n  position: relative;\r\n}\r\n\r\n.custom-date-cell:hover {\r\n  border-color: #409eff;\r\n}\r\n\r\n.is-selected {\r\n  border-color: #409eff;\r\n}\r\n\r\n.custom-date-cell .date {\r\n  font-weight: bold;\r\n  font-size: 0.8em;\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n}\r\n\r\n.custom-date-cell .content {\r\n  font-size: 0.9em;\r\n  color: #666;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n.custom-message .el-message__content {\r\n  color: #1890ff;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAoBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA,MAAAC,IAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,YAAAC,IAAA;MACA,MAAAC,KAAA,QAAAC,eAAA,CAAAF,IAAA;MACA,IAAAC,KAAA;QACA,KAAAE,WAAA,CAAAF,KAAA,CAAAA,KAAA;MACA;QACA,KAAAE,WAAA;MACA;IACA;IACAN,KAAA;MACAO,KAAA,mCACAC,IAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,IAAA,IACAF,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,IAAAE,KAAA,CAAAC,OAAA,CAAAH,GAAA;UACA,KAAAX,GAAA,GAAAW,GAAA,CAAAI,GAAA,CAAAC,IAAA;YACAX,IAAA,EAAAW,IAAA,CAAAX,IAAA;YACAC,KAAA,EAAAU,IAAA,CAAAV;UACA;QACA;MACA,GACAW,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;IACAX,gBAAAF,IAAA;MACA,YAAAL,GAAA,CAAAoB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAhB,IAAA,KAAAA,IAAA;IACA;IACAiB,WAAAjB,IAAA;MACA,MAAAkB,OAAA,OAAAxB,IAAA,CAAAM,IAAA;MACAkB,OAAA,CAAAC,OAAA,CAAAD,OAAA,CAAAE,OAAA;MACA,OAAAF,OAAA,CAAAG,WAAA,GAAAC,KAAA;IACA;IACAnB,YAAAoB,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,EAAAA,OAAA;QACAE,IAAA;QACAC,WAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}