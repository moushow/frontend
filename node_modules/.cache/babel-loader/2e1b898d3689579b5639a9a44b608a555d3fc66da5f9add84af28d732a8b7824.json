{"ast":null,"code":"export default {\n  name: \"Person\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      const username = this.user.username;\n      if (!username) {\n        this.$message.error(\"当前无法获取用户信息！\");\n        return;\n      }\n      this.request.get(\"/user/\" + username).then(res => {\n        console.log(res);\n        this.form = res.data;\n      });\n    },\n    save() {\n      this.form.username = this.user.username;\n      this.request.post(\"/user/update\", this.form).then(res => {\n        if (res) {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n          this.$emit('refreshUser');\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    handleAvatarSuccess() {\n      //res就是文件的路径\n      this.form.avatar = res;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","created","load","methods","username","$message","error","request","get","then","res","console","log","save","post","success","dialogFormVisible","$emit","handleAvatarSuccess","avatar"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 600px\">\r\n      <el-form label-width=\"80px\" size=\"small\">\r\n        <div style=\"text-align: center; margin: 10px 0\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              action=\"https://jsonplaceholder.typicode.com/posts/\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n              :before-upload=\"beforeAvatarUpload\">\r\n            <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"用户名\" >\r\n          <el-input v-model=\"form.username\" autocomplete=\"off\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" >\r\n          <el-input v-model=\"form.password\" autocomplete=\"off\" disabled show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\" >\r\n          <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" >\r\n          <el-input v-model=\"form.telephone\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" >\r\n          <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div style=\"text-align: center\">\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        <router-link to=\"/password\">\r\n          <el-button type=\"warning\">修改密码</el-button>\r\n        </router-link>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  name:\"Person\",\r\n  data(){\r\n    return{\r\n      form:{},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n    }\r\n  },\r\n  created(){\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load(){\r\n      const username = this.user.username\r\n      if(!username){\r\n        this.$message.error(\"当前无法获取用户信息！\")\r\n        return\r\n      }\r\n      this.request.get(\"/user/\" + username).then(res => {\r\n        console.log(res)\r\n        this.form = res.data;\r\n      })\r\n    },\r\n    save(){\r\n      this.form.username = this.user.username\r\n      this.request.post(\"/user/update\",this.form).then(res =>{\r\n        if(res){\r\n          this.$message.success(\"保存成功\")\r\n          this.dialogFormVisible = false\r\n          this.load()\r\n          this.$emit('refreshUser')\r\n        }else{\r\n          this.$message.error(\"保存失败\")\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(){\r\n      //res就是文件的路径\r\n      this.form.avatar = res\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,MAAAE,QAAA,QAAAR,IAAA,CAAAQ,QAAA;MACA,KAAAA,QAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAC,OAAA,CAAAC,GAAA,YAAAJ,QAAA,EAAAK,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAf,IAAA,GAAAe,GAAA,CAAAhB,IAAA;MACA;IACA;IACAmB,KAAA;MACA,KAAAlB,IAAA,CAAAS,QAAA,QAAAR,IAAA,CAAAQ,QAAA;MACA,KAAAG,OAAA,CAAAO,IAAA,sBAAAnB,IAAA,EAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA;UACA,KAAAL,QAAA,CAAAU,OAAA;UACA,KAAAC,iBAAA;UACA,KAAAd,IAAA;UACA,KAAAe,KAAA;QACA;UACA,KAAAZ,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IACAY,oBAAA;MACA;MACA,KAAAvB,IAAA,CAAAwB,MAAA,GAAAT,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}